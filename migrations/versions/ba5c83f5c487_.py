"""empty message

Revision ID: ba5c83f5c487
Revises: 
Create Date: 2017-12-04 13:42:01.404239

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba5c83f5c487'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('link_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('situations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('stars', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('auto', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['link_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('situations_tags',
    sa.Column('situation_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['situation_id'], ['situations.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('situation_id', 'tag_id')
    )
    op.create_table('links_tags',
    sa.Column('link_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['link_id'], ['links.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('link_id', 'tag_id')
    )
    # Create an ad-hoc table to use for the insert statement.
    link_groups_table = sa.table('link_groups',
    sa.Column('id', sa.Integer()),
    sa.Column('name', sa.String(length=255))
    )
    op.bulk_insert(link_groups_table, [
        { 'name': 'api' },
        { 'name': 'application' },
        { 'name': 'documentation' },
        { 'name': 'download' },
        { 'name': 'external' },
        { 'name': 'geoservice' },
        { 'name': 'helper' }
      ]
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('links_tags')
    op.drop_table('situations_tags')
    op.drop_table('links')
    op.drop_table('tags')
    op.drop_table('situations')
    op.drop_table('link_groups')
    # ### end Alembic commands ###
